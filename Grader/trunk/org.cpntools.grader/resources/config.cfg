[matcher]
-100.0: signature,threshold=210

[tests]
-100.0: declaration-preservation,globref
-100.0: interface-preservation,initmark=true,subset=Car_Rental
-5.0: reversible,steps=200000

0.5: btl,repeats=4,name="If 25 reservations arrive at time 0 (some of which are denied, rejected and concluded) and additional 25 reservations arrive at time 100, none are cancelled",test=
    + (@(!Main.Customer.Generate_Customer)) &
    + (Main.reservation := "1`(Compact,3,[1])@0.0++1`(Compact,3,[2])@0.0++1`(Compact,3,[3])@0.0++1`(Compact,3,[4])@0.0++1`(Compact,3,[5])@0.0++1`(Compact,3,[6])@0.0++1`(Compact,3,[7])@0.0++1`(Compact,3,[8])@0.0++1`(Compact,3,[9])@0.0++1`(Compact,3,[10])@0.0++1`(Compact,3,[11])@0.0++1`(Compact,3,[12])@0.0++1`(Compact,3,[13])@0.0++1`(Compact,3,[14])@0.0++1`(Compact,3,[15])@0.0++1`(Compact,3,[16])@0.0++1`(Compact,3,[17])@0.0++1`(Compact,3,[18])@0.0++1`(Compact,3,[19])@0.0++1`(Compact,3,[20])@0.0++1`(Compact,3,[21])@0.0++1`(Compact,3,[22])@0.0++1`(Compact,3,[23])@0.0++1`(Compact,3,[24])@0.0++1`(Compact,3,[25])@0.0++1`(Compact,3,[100])@100.0++1`(Compact,3,[200])@100.0++1`(Compact,3,[300])@100.0++1`(Compact,3,[400])@100.0++1`(Compact,3,[500])@100.0++1`(Compact,3,[600])@100.0++1`(Compact,3,[700])@100.0++1`(Compact,3,[800])@100.0++1`(Compact,3,[900])@100.0++1`(Compact,3,[1000])@100.0++1`(Compact,3,[1100])@100.0++1`(Compact,3,[1200])@100.0++1`(Compact,3,[1300])@100.0++1`(Compact,3,[1400])@100.0++1`(Compact,3,[1500])@100.0++1`(Compact,3,[1600])@100.0++1`(Compact,3,[1700])@100.0++1`(Compact,3,[1800])@100.0++1`(Compact,3,[1900])@100.0++1`(Compact,3,[2000])@100.0++1`(Compact,3,[2100])@100.0++1`(Compact,3,[2200])@100.0++1`(Compact,3,[2300])@100.0++1`(Compact,3,[2400])@100.0++1`(Compact,3,[2500])@100.0") &
    + (Customer.pending_reservation := "1`(Compact,3,[1])@0.0++1`(Compact,3,[2])@0.0++1`(Compact,3,[3])@0.0++1`(Compact,3,[4])@0.0++1`(Compact,3,[5])@0.0++1`(Compact,3,[6])@0.0++1`(Compact,3,[7])@0.0++1`(Compact,3,[8])@0.0++1`(Compact,3,[9])@0.0++1`(Compact,3,[10])@0.0++1`(Compact,3,[11])@0.0++1`(Compact,3,[12])@0.0++1`(Compact,3,[13])@0.0++1`(Compact,3,[14])@0.0++1`(Compact,3,[15])@0.0++1`(Compact,3,[16])@0.0++1`(Compact,3,[17])@0.0++1`(Compact,3,[18])@0.0++1`(Compact,3,[19])@0.0++1`(Compact,3,[20])@0.0++1`(Compact,3,[21])@0.0++1`(Compact,3,[22])@0.0++1`(Compact,3,[23])@0.0++1`(Compact,3,[24])@0.0++1`(Compact,3,[25])@0.0++1`(Compact,3,[100])@100.0++1`(Compact,3,[200])@100.0++1`(Compact,3,[300])@100.0++1`(Compact,3,[400])@100.0++1`(Compact,3,[500])@100.0++1`(Compact,3,[600])@100.0++1`(Compact,3,[700])@100.0++1`(Compact,3,[800])@100.0++1`(Compact,3,[900])@100.0++1`(Compact,3,[1000])@100.0++1`(Compact,3,[1100])@100.0++1`(Compact,3,[1200])@100.0++1`(Compact,3,[1300])@100.0++1`(Compact,3,[1400])@100.0++1`(Compact,3,[1500])@100.0++1`(Compact,3,[1600])@100.0++1`(Compact,3,[1700])@100.0++1`(Compact,3,[1800])@100.0++1`(Compact,3,[1900])@100.0++1`(Compact,3,[2000])@100.0++1`(Compact,3,[2100])@100.0++1`(Compact,3,[2200])@100.0++1`(Compact,3,[2300])@100.0++1`(Compact,3,[2400])@100.0++1`(Compact,3,[2500])@100.0") &
    + (Customer.PreExisting := "1`(1,30,RECENT)@0.0++1`(2,30,RECENT)@0.0++1`(3,30,RECENT)@0.0++1`(4,20,VALID)@0.0++1`(5,20,VALID)@0.0++1`(6,20,VALID)@0.0++1`(8,20,VALID)@0.0++1`(9,20,VALID)@0.0++1`(10,40,INVALID)@0.0++1`(11,40,INVALID)@0.0++1`(24,40,INVALID)@0.0++1`(25,40,INVALID)@0.0") &
    + (Customer_Assessment.PreExisting := "1`(1,Legitimate)@0.0++1`(2,Legitimate)@0.0++1`(3,Legitimate)@0.0++1`(4,Legitimate)@0.0++1`(5,Legitimate)@0.0++1`(6,Legitimate)@0.0++1`(8,Legitimate)@0.0++1`(9,Legitimate)@0.0++1`(10,Legitimate)@0.0++1`(11,Legitimate)@0.0++1`(24,Legitimate)@0.0++1`(25,Legitimate)@0.0++1`(12,Blacklisted)@0.0++1`(13,Blacklisted)@0.0++1`(14,Blacklisted)@0.0++1`(15,Blacklisted)@0.0++1`(16,Blacklisted)@0.0++1`(17,Blacklisted)@0.0++1`(18,Blacklisted)@0.0++1`(19,Blacklisted)@0.0++1`(20,Blacklisted)@0.0++1`(21,Blacklisted)@0.0++1`(22,Blacklisted)@0.0++1`(23,Blacklisted)@0.0") &
    +   (Customer.Expected_offer := "1`(Compact,3,[1],true,135)@0.0++1`(Compact,3,[2],true,135)@0.0++1`(Compact,3,[3],true,135)@0.0++1`(Compact,3,[4],true,135)@0.0++1`(Compact,3,[5],false,135)@0.0++1`(Compact,3,[6],false,135)@0.0++1`(Compact,3,[7],false,135)@0.0++1`(Compact,3,[8],false,135)@0.0++1`(Compact,3,[9],false,135)@0.0") &
    + ( (50 * ( --> (Customer.Record_Denied_Reservation |  Customer.Record_Rejected_Reservation | Customer.Record_Concluded_Reservation ))) -> Customer.info := "Not satisfied: eventually all 50 reservations need to be either denied or rejected or concluded (but not cancelled).") 

0.5: btl,repeats=4,name="If 30 reservations arrive at the same time, five are cancelled",test=
    + (@(!Main.Customer.Generate_Customer)) &
    + (Main.reservation := "1`(Compact,3,[1])@0.0++1`(Compact,3,[2])@0.0++1`(Compact,3,[3])@0.0++1`(Compact,3,[4])@0.0++1`(Compact,3,[5])@0.0++1`(Compact,3,[6])@0.0++1`(Compact,3,[7])@0.0++1`(Compact,3,[8])@0.0++1`(Compact,3,[9])@0.0++1`(Compact,3,[10])@0.0++1`(Compact,3,[11])@0.0++1`(Compact,3,[12])@0.0++1`(Compact,3,[13])@0.0++1`(Compact,3,[14])@0.0++1`(Compact,3,[15])@0.0++1`(Compact,3,[16])@0.0++1`(Compact,3,[17])@0.0++1`(Compact,3,[18])@0.0++1`(Compact,3,[19])@0.0++1`(Compact,3,[20])@0.0++1`(Compact,3,[21])@0.0++1`(Compact,3,[22])@0.0++1`(Compact,3,[23])@0.0++1`(Compact,3,[24])@0.0++1`(Compact,3,[25])@0.0++1`(Compact,3,[26])@0.0++1`(Compact,3,[27])@0.0++1`(Compact,3,[28])@0.0++1`(Compact,3,[29])@0.0++1`(Compact,3,[30])@0.0") &
    + (Customer.pending_reservation := "1`(Compact,3,[1])@0.0++1`(Compact,3,[2])@0.0++1`(Compact,3,[3])@0.0++1`(Compact,3,[4])@0.0++1`(Compact,3,[5])@0.0++1`(Compact,3,[6])@0.0++1`(Compact,3,[7])@0.0++1`(Compact,3,[8])@0.0++1`(Compact,3,[9])@0.0++1`(Compact,3,[10])@0.0++1`(Compact,3,[11])@0.0++1`(Compact,3,[12])@0.0++1`(Compact,3,[13])@0.0++1`(Compact,3,[14])@0.0++1`(Compact,3,[15])@0.0++1`(Compact,3,[16])@0.0++1`(Compact,3,[17])@0.0++1`(Compact,3,[18])@0.0++1`(Compact,3,[19])@0.0++1`(Compact,3,[20])@0.0++1`(Compact,3,[21])@0.0++1`(Compact,3,[22])@0.0++1`(Compact,3,[23])@0.0++1`(Compact,3,[24])@0.0++1`(Compact,3,[25])@0.0++1`(Compact,3,[26])@0.0++1`(Compact,3,[27])@0.0++1`(Compact,3,[28])@0.0++1`(Compact,3,[29])@0.0++1`(Compact,3,[30])@0.0") &
    + ( ( 5 * (--> Customer.Record_Cancelled_Reservation) ) -> Customer.info := "Not satisfied: transition Record Cancelled Reservation is eventually executed five times") &
    + ((( ( 5 * (--> Customer.Record_Cancelled_Reservation)) -> (--> Customer.Record_Cancelled_Reservation) => [false])) -> Customer.info := "Satisfied") 

0.5: btl,repeats=4,name="Two reservations containing each a 16-years old customer are always denied",test=
     + (@(!Main.Customer.Generate_Customer)) &
     + (Main.reservation := "1`(Sport,3,[1])@0.0++1`(Sport,5,[3])@0.0") &
     + (Customer.pending_reservation := "1`(Sport,3,[1])@0.0++1`(Sport,5,[3])@0.0") &
     + (Customer.PreExisting := "1`(1,16,VALID)@0.0++1`(3,16,VALID)@0.0") &
     + (Customer_Assessment.PreExisting := "1`(1,Legitimate)@0.0++1`(3,Legitimate)@0.0") &
     + (Customer.info := "Not satisfied: transition Record Cancelled Reservation is executed at least once") &
     + ( ( 2 * (--> Customer.Record_Denied_Reservation) ) -> Customer.info := "Not satisfied: transition Record Denied Reservation must have been executed twice")    
     
0.5: btl,repeats=4,name="One reservation that includes a 16-years-old customer is always denied, while concurrently one reservation that includes a 18-year-old with VALID driving license is not.",test=
    + (@(!Main.Customer.Generate_Customer)) &
    + (Main.reservation := "1`(Sport,3,[1,3,5])@0.0++1`(Sport,5,[9,10,11])@0.0") &
    + (Customer.pending_reservation := "1`(Sport,3,[1,3,5])@0.0++1`(Sport,5,[9,10,11])@0.0") &
    + (Customer.PreExisting := "1`(1,20,VALID)@0.0++1`(3,16,VALID)@0.0++1`(5,38,VALID)@0.0++1`(9,20,VALID)@0.0++1`(10,18,VALID)@0.0++1`(11,38,VALID)@0.0") &
    + (Customer_Assessment.PreExisting := "1`(1,Legitimate)@0.0++1`(3,Legitimate)@0.0++1`(5,Legitimate)@0.0++1`(9,Legitimate)@0.0++1`(10,Legitimate)@0.0++1`(11,Legitimate)@0.0") &
    + (  (--> Customer.Record_Denied_Reservation)  -> Customer.info := "Not satisfied: transition Record Denied Reservation must have been executed once") &
    + (  ( --> ( Customer.Record_Rejected_Reservation |  Customer.Record_Concluded_Reservation )) 
    + -> Customer.info := "Not satisfied: transition Record Rejected Reservation or Record Concluded Reservation must have been executed")

0.5: btl,repeats=4,name="One 3-day reservation for sport cars that includes legitimate customers older than 25 with VALID driving licenses is eventually concluded with costs 210 and within 100 hours if the offer is accepted",test=
  +   (@(!Main.Customer.Generate_Customer)) &
  +   (@(!Main.Customer.Decide_if_accept)) &
  +   (Main.reservation := "1`(Sport,3,[1,3,5])@0.0") &
  +   (Customer.pending_reservation := "1`(Sport,3,[1,3,5])@0.0") &
  +   (Customer.PreExisting := "1`(1,30,VALID)@0.0++1`(3,50,VALID)@0.0++1`(5,38,VALID)@0.0") &
  +   (Customer_Assessment.PreExisting := "1`(1,Legitimate)@0.0++1`(3,Legitimate)@0.0++1`(5,Legitimate)@0.0") &
  +   (Customer.Expected_offer := "1`(Sport,3,[1,3,5],true,210)@0.0") &
  +   (  (--> ([time <= 100] & [Customer.Record_Concluded_Reservation])) 
  +   -> Customer.info := "Not satisfied: transition Record Concluded Reservation must have been executed within 100 time units")     

0.5: btl,repeats=4,name="One 3-day reservation for sport cars that includes legitimate customers older than 25 with VALID driving licenses is rejected within 20 hours if the offer is rejected",test=  
  +   (@(!Main.Customer.Generate_Customer)) &
  +   (@(!Main.Customer.Decide_if_accept)) &
  +   (Main.reservation := "1`(Sport,3,[1,3,5])@0.0") &
  +   (Customer.pending_reservation := "1`(Sport,3,[1,3,5])@0.0") &
  +   (Customer.PreExisting := "1`(1,30,VALID)@0.0++1`(3,50,VALID)@0.0++1`(5,38,VALID)@0.0") &
  +   (Customer_Assessment.PreExisting := "1`(1,Legitimate)@0.0++1`(3,Legitimate)@0.0++1`(5,Legitimate)@0.0") &
  +   (Customer.Expected_offer := "1`(Sport,3,[1,3,5],false,210)@0.0") &
  +   (  (--> ([time <= 20] & [Customer.Record_Rejected_Reservation]))  -> Customer.info := "Not satisfied: transition Record Rejected Reservation must have been executed within 20 time units")  

0.5: btl,repeats=4,name="Two reservations that include legitimate 20-year-old customers with VALID driving licenses are never denied",test=
    + (@(!Main.Customer.Generate_Customer)) &
    + (Main.reservation := "1`(Sport,3,[1,3,5])@0.0++1`(Sport,3,[9,10,11])@0.0") &
    + (Customer.pending_reservation := "1`(Sport,3,[1,3,5])@0.0++1`(Sport,3,[9,10,11])@0.0") &
    + (Customer.PreExisting := "1`(1,20,VALID)@0.0++1`(3,50,VALID)@0.0++1`(5,38,VALID)@0.0++1`(9,20,VALID)@0.0++1`(10,50,VALID)@0.0++1`(11,38,VALID)@0.0") &
    + (Customer_Assessment.PreExisting := "1`(1,Legitimate)@0.0++1`(3,Legitimate)@0.0++1`(5,Legitimate)@0.0++1`(9,Legitimate)@0.0++1`(10,Legitimate)@0.0++1`(11,Legitimate)@0.0") &
    + ( ( 2 * ( --> ( Customer.Record_Rejected_Reservation |  Customer.Record_Concluded_Reservation ))) -> Customer.info := "Not satisfied: The number of executions of 'Record Rejected Reservation' plus those of 'Record Concluded Reservation' needs to be two.") 

0.5: btl,repeats=4,name="Two reservations that include legitimate 20-year-old customers with RECENT driving licenses are denied",test=
    + (@(!Main.Customer.Generate_Customer)) &
    + (Main.reservation := "1`(Sport,3,[1,3,5])@0.0++1`(Sport,3,[9,10,11])@0.0") &
    + (Customer.pending_reservation := "1`(Sport,3,[1,3,5])@0.0++1`(Sport,3,[9,10,11])@0.0") &
    + (Customer.PreExisting := "1`(1,30,VALID)@0.0++1`(3,20,RECENT)@0.0++1`(5,38,VALID)@0.0++1`(9,20,RECENT)@0.0++1`(10,50,VALID)@0.0++1`(11,38,VALID)@0.0") &
    + (Customer_Assessment.PreExisting := "1`(1,Legitimate)@0.0++1`(3,Legitimate)@0.0++1`(5,Legitimate)@0.0++1`(9,Legitimate)@0.0++1`(10,Legitimate)@0.0++1`(11,Legitimate)@0.0") &
    + ( ( 2 * (--> Customer.Record_Denied_Reservation) ) -> Customer.info := "Not satisfied: transition Record Denied Reservation must have been executed twice")      

0.5: btl,repeats=4,name="One reservation that includes legitimate customers older than 25 with VALID driving licenses is rejected if the offer is rejected",test=
    + (@(!Main.Customer.Generate_Customer)) &
    +   (@(!Main.Customer.Decide_if_accept)) &
    + (Main.reservation := "1`(Sport,3,[1,3,5])@0.0") &
    + (Customer.pending_reservation := "1`(Sport,3,[1,3,5])@0.0") &
    + (Customer.PreExisting := "1`(1,30,VALID)@0.0++1`(3,60,VALID)@0.0++1`(5,38,VALID)@0.0++1`(9,20,RECENT)@0.0++1`(10,50,VALID)@0.0++1`(11,38,VALID)@0.0") &
    +   (Customer.Expected_offer := "1`(Sport,3,[1,3,5],false,210)@0.0") &
    + (Customer_Assessment.PreExisting := "1`(1,Legitimate)@0.0++1`(3,Legitimate)@0.0++1`(5,Legitimate)@0.0++1`(9,Legitimate)@0.0++1`(10,Legitimate)@0.0++1`(11,Legitimate)@0.0") &
    + ( (--> Customer.Record_Rejected_Reservation) -> Customer.info := "Not satisfied: transition Record Denied Reservation must have been executed twice")      

0.5: btl,repeats=4,name="One reservation that includes legitimate customers older than 25 with VALID driving licenses is concluded if the offer is accepted",test=
    + (@(!Main.Customer.Generate_Customer)) &
    +   (@(!Main.Customer.Decide_if_accept)) &
    + (Main.reservation := "1`(Sport,3,[1,3,5])@0.0") &
    + (Customer.pending_reservation := "1`(Sport,3,[1,3,5])@0.0") &
    + (Customer.PreExisting := "1`(1,30,VALID)@0.0++1`(3,60,VALID)@0.0++1`(5,38,VALID)@0.0++1`(9,20,RECENT)@0.0++1`(10,50,VALID)@0.0++1`(11,38,VALID)@0.0") &
    +   (Customer.Expected_offer := "1`(Sport,3,[1,3,5],true,210)@0.0") &
    + (Customer_Assessment.PreExisting := "1`(1,Legitimate)@0.0++1`(3,Legitimate)@0.0++1`(5,Legitimate)@0.0++1`(9,Legitimate)@0.0++1`(10,Legitimate)@0.0++1`(11,Legitimate)@0.0") &
     + ( (--> Customer.Record_Concluded_Reservation) -> Customer.info := "Not satisfied: transition Record Concluded Reservation must have been executed once") 
      
0.5: btl,repeats=4,name="One reservation that includes legitimate 50-year-old customers with INVALID driving licenses are denied",test=  
  +   (@(!Main.Customer.Generate_Customer)) &
  +   (Main.reservation := "1`(Sport,3,[1,3,5])@0.0") &
  +   (Customer.pending_reservation := "1`(Sport,3,[1,3,5])@0.0") &
  +   (Customer.PreExisting := "1`(1,30,VALID)@0.0++1`(3,50,INVALID)@0.0++1`(5,38,VALID)@0.0") &
  +   (Customer_Assessment.PreExisting := "1`(1,Legitimate)@0.0++1`(3,Blacklisted)@0.0++1`(5,Legitimate)@0.0") &
  +   (  (--> ([time <= 4] & [time>=1] & [Customer.Record_Denied_Reservation]))  -> Customer.info := "Not satisfied: transition Record Denied Reservation must have been executed within 4 time units but not earlier than 2 time units")  &
  +  (  (--> (  [Customer.Record_Denied_Reservation]) )  -> Customer.info := "Not satisfied: transition Record Denied Reservation must have been executed") 

0.5: btl,repeats=4,name="One reservation that includes one blacklisted customer older than 25 with VALID driving licenses is denied within an interval between 1 and 4 hours",test=  
  +   (@(!Main.Customer.Generate_Customer)) &
  +   (Main.reservation := "1`(Sport,3,[1,3,5])@0.0") &
  +   (Customer.pending_reservation := "1`(Sport,3,[1,3,5])@0.0") &
  +   (Customer.PreExisting := "1`(1,30,VALID)@0.0++1`(3,50,VALID)@0.0++1`(5,38,VALID)@0.0") &
  +   (Customer_Assessment.PreExisting := "1`(1,Legitimate)@0.0++1`(3,Blacklisted)@0.0++1`(5,Legitimate)@0.0") &
  +   (  (--> ([time <= 4] & [time>=1] & [Customer.Record_Denied_Reservation])) 
  +  -> Customer.info := "Not satisfied: transition Record Denied Reservation must have been executed within 4 time units but not earlier than 1 time units")  
  
0.5: btl,repeats=4,name="Offers that come to the car rental agency from no reservation requests are ignored ",test=
    + (@(!Main.Customer.Generate_Customer)) &
    + (Main.offer := "1`(Compact,1,[10,30,50],true,45)@0.0++1`(Sport,1,[1,6,13],true,45)@0.0++1`(Compact,1,[18,21,66],false,45)@0.0") &    
    + (Customer.car_to_give := "1`(Compact,1,[10,30,50],true,45)@0.0++1`(Sport,1,[1,6,13],true,45)@0.0++1`(Compact,1,[18,21,66],false,45)@0.0") &
    + (Customer.rejected_offers := "1`(Compact,1,[18,21,66],false,45)@0.0") &
    + (( ( --> ( Customer.Record_Rejected_Reservation |  Customer.Record_Concluded_Reservation )) => [false]) -> Customer.info := "Not satisfied: At least one between 'Record Rejected Reservation' plus those of 'Record Concluded Reservation' has been executed.") 

0.5: btl,repeats=4,name="Notifications of cars that are returned for reservations that were never requested are ignored",test=
    + (@(!Main.Customer.Generate_Customer)) &
    + (Main.car_returned := "1`(Compact,1,[10,30,50])@0.0++1`(Sport,1,[1,6,13])@10.0++1`(Compact,1,[18,21,66])@20.0") &
    + (Customer.car_to_give := "1`(Compact,1,[10,30,50],true,45)@0++1`(Sport,1,[1,6,13],true,45)@10++1`(Compact,1,[18,21,66],true,45)@20.0") &
    + (Customer_Assessment.PreExisting := "1`(1,Legitimate)@0.0++1`(3,Legitimate)@0.0++1`(5,Legitimate)@0.0++1`(9,Legitimate)@0.0++1`(10,Legitimate)@0.0++1`(11,Legitimate)@0.0") &
    + (( ( --> ( Customer.Record_Rejected_Reservation |  Customer.Record_Concluded_Reservation )) => [false]) -> Customer.info := "Not satisfied: At least one between 'Record Rejected Reservation' plus those of 'Record Concluded Reservation' has been executed.") 
